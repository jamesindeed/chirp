import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import type { useUserReturn } from "@clerk/nextjs/dist/types";

import { RouterOutputs, api } from "~/utils/api";
import Image from "next/image";

const CreatePostWizard = ({ user }) => {
  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        className="h-12 w-12 rounded-full"
        src={user?.profileImageUrl}
        alt="Profile Image"
        width={100}
        height={100}
      ></Image>
      <input
        placeholder="Type some emojis!"
        className="grow bg-transparent outline-none"
      ></input>
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = ({ post, author }: PostWithUser) => {
  return (
    <div className="border-b border-slate-400 p-8">
      <div className="flex items-center gap-3">
        <Image
          className="h-12 w-12 rounded-full"
          src={author?.profileImageUrl}
          alt="Profile Image"
          width={100}
          height={100}
        ></Image>
        <div className="flex flex-col">
          <div className="font-bold">{author?.username}</div>
        </div>
      </div>
      <div className="pl-2 pt-4">{post.content}</div>
    </div>
  );
};

const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  const { user, isSignedIn } = useUser();

  if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong</div>;
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="bg-pink h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex items-center justify-between border-b border-slate-400 p-4">
            <div>{isSignedIn ? <CreatePostWizard user={user} /> : null}</div>
            <div>{!isSignedIn ? <SignInButton /> : <SignOutButton />}</div>
          </div>
          <div className="flex flex-col">
            {data?.map(({ post, author }) => (
              <PostView key={post.id} post={post} author={author} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
